[{"/Users/trainguyen/GTBootCamp/mern-boilerplate/client/src/index.js":"1","/Users/trainguyen/GTBootCamp/mern-boilerplate/client/src/App.js":"2","/Users/trainguyen/GTBootCamp/mern-boilerplate/client/src/services/auth.service.js":"3","/Users/trainguyen/GTBootCamp/mern-boilerplate/client/src/components/pages/register.component.js":"4","/Users/trainguyen/GTBootCamp/mern-boilerplate/client/src/components/pages/login.component.js":"5","/Users/trainguyen/GTBootCamp/mern-boilerplate/client/src/components/pages/profile.component.js":"6","/Users/trainguyen/GTBootCamp/mern-boilerplate/client/src/components/pages/home.component.js":"7","/Users/trainguyen/GTBootCamp/mern-boilerplate/client/src/components/pages/board.user.js":"8","/Users/trainguyen/GTBootCamp/mern-boilerplate/client/src/components/pages/board.admin.js":"9","/Users/trainguyen/GTBootCamp/mern-boilerplate/client/src/components/pages/board.moderator.js":"10","/Users/trainguyen/GTBootCamp/mern-boilerplate/client/src/services/user.service.js":"11","/Users/trainguyen/GTBootCamp/mern-boilerplate/client/src/services/auth.header.js":"12","/Users/trainguyen/GTBootCamp/mern-boilerplate/client/src/components/navbar/navbar.component.js":"13","/Users/trainguyen/GTBootCamp/mern-boilerplate/client/src/components/navbar/navitem.component.js":"14"},{"size":220,"mtime":1611368296673,"results":"15","hashOfConfig":"16"},{"size":2335,"mtime":1611418993727,"results":"17","hashOfConfig":"16"},{"size":843,"mtime":1611372049188,"results":"18","hashOfConfig":"16"},{"size":6454,"mtime":1611421278695,"results":"19","hashOfConfig":"16"},{"size":3365,"mtime":1612665067403,"results":"20","hashOfConfig":"16"},{"size":1831,"mtime":1611380072771,"results":"21","hashOfConfig":"16"},{"size":718,"mtime":1611368296672,"results":"22","hashOfConfig":"16"},{"size":1306,"mtime":1611420782525,"results":"23","hashOfConfig":"16"},{"size":1308,"mtime":1611420902718,"results":"24","hashOfConfig":"16"},{"size":1310,"mtime":1611420801185,"results":"25","hashOfConfig":"16"},{"size":571,"mtime":1611375171747,"results":"26","hashOfConfig":"16"},{"size":307,"mtime":1611375251582,"results":"27","hashOfConfig":"16"},{"size":1903,"mtime":1611419945153,"results":"28","hashOfConfig":"16"},{"size":374,"mtime":1611420060482,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1t9zlr9",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"32"},"/Users/trainguyen/GTBootCamp/mern-boilerplate/client/src/index.js",[],["66","67"],"/Users/trainguyen/GTBootCamp/mern-boilerplate/client/src/App.js",["68"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport AuthService from \"./services/auth.service\";\n\nimport Login from \"./components/pages/login.component\";\nimport Register from \"./components/pages/register.component\";\nimport Home from \"./components/pages/home.component\";\nimport Profile from \"./components/pages/profile.component\";\nimport BoardUser from \"./components/pages/board.user\";\nimport BoardModerator from \"./components/pages/board.moderator\";\nimport BoardAdmin from \"./components/pages/board.admin\";\nimport Navbar from \"./components/navbar/navbar.component\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      showModeratorBoard: false,\n      showAdminBoard: false,\n      currentUser: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n    if (user) {\n        if (new Date(user.expiredInDate) > new Date()) {\n          this.setState({\n              currentUser: user,\n              showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n              showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\n            });\n        } else {\n          this.logOut();\n        } \n    } \n  }\n\n  logOut() {\n    AuthService.logout();\n  }\n\n  render() {\n    const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\n\n    return (\n      <div>\n      <Router >\n        <Navbar \n          showModeratorBoard = {showModeratorBoard}\n          showAdminBoard = {showAdminBoard}\n          currentUser = {currentUser}\n          logOut = {this.logOut}\n        />\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/home\"]} component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route path=\"/user\" component={BoardUser} />\n            <Route path=\"/mod\" component={BoardModerator} />\n            <Route path=\"/admin\" component={BoardAdmin} />\n          </Switch>\n        </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;","/Users/trainguyen/GTBootCamp/mern-boilerplate/client/src/services/auth.service.js",[],"/Users/trainguyen/GTBootCamp/mern-boilerplate/client/src/components/pages/register.component.js",[],"/Users/trainguyen/GTBootCamp/mern-boilerplate/client/src/components/pages/login.component.js",["69","70"],"/Users/trainguyen/GTBootCamp/mern-boilerplate/client/src/components/pages/profile.component.js",["71"],"import React, { Component } from 'react';\nimport {\n    BrowserRouter as Router,\n    Route,\n    Redirect\n  } from \"react-router-dom\";\nimport AuthService from \"../../services/auth.service\";\n\nexport default class Profile extends Component {\n    state = {\n        currentuser: AuthService.getCurrentUser()\n    }\n\n    render() {\n        const { currentuser } = this.state\n        if (currentuser) {\n            return (\n                <div className=\"container\">\n                    <header className=\"jumbotron\">\n                        <h3>\n                            <strong>{currentuser.username}</strong> Profile\n                        </h3>\n                    </header>\n                    <p>\n                        <strong>Token:</strong>{\" \"}\n                        {currentuser.accessToken.substring(0,20)} ...{\" \"}\n                        {currentuser.accessToken.substr(currentuser.accessToken.length - 20)}\n                    </p>\n                    <p>\n                        <strong>Id: </strong>{\" \"}\n                        {currentuser.id}\n                    </p>\n                    <p>\n                        <strong>Email: </strong>{\" \"}\n                        {currentuser.email}\n                    </p>\n                    <strong>Authorities:</strong>\n                    <ul>{currentuser.roles && \n                            currentuser.roles.map( (role, index) => \n                                <li key={index}>{role}</li>)\n                        }\n                    </ul>\n                </div>\n            )\n        } else {\n            return (\n                <Route>\n                    <Redirect\n                        to={{\n                        pathname: \"/login\"\n                        }}\n                    />\n                </Route>\n            )\n        }\n        \n    }\n}\n","/Users/trainguyen/GTBootCamp/mern-boilerplate/client/src/components/pages/home.component.js",[],"/Users/trainguyen/GTBootCamp/mern-boilerplate/client/src/components/pages/board.user.js",["72","73"],"import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route, Redirect} from \"react-router-dom\";\nimport authService from '../../services/auth.service';\n\nimport UserService from \"../../services/user.service\";\nimport AuthService from \"../../services/auth.service\";\n\nexport default class BoardUser extends Component {\n    state = {\n        currentuser: authService.getCurrentUser(),\n        content: \"\"\n    }\n    componentDidMount() {\n        UserService.getUserBoard().then(res => {\n            this.setState({content: res.data})\n        }, err => {\n            this.setState({\n                content: (err.response && err.response.data) || err.message || err.toString()\n            })\n        })\n    }\n    render() {\n        if (this.state.currentuser) {\n            return (\n                <div className=\"container\">\n                    <header className=\"jumbotron\">\n                        <h3>{this.state.content}</h3>\n                    </header>\n                </div>\n            )\n        } else {\n            return (\n                <Route>\n                    <Redirect\n                        to={{\n                        pathname: \"/login\"\n                        }}\n                    />\n                </Route>\n            )\n            \n        }\n        \n    }\n}\n","/Users/trainguyen/GTBootCamp/mern-boilerplate/client/src/components/pages/board.admin.js",["74","75"],"import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route, Redirect} from \"react-router-dom\";\nimport authService from '../../services/auth.service';\n\nimport UserService from \"../../services/user.service\";\nimport AuthService from \"../../services/auth.service\";\n\nexport default class BoardAdmin extends Component {\n    state = {\n        currentuser: authService.getCurrentUser(),\n        content: \"\"\n    }\n    componentDidMount() {\n        UserService.getAdminBoard().then(res => {\n            this.setState({content: res.data})\n        }, err => {\n            this.setState({\n                content: (err.response && err.response.data) || err.message || err.toString()\n            })\n        })\n    }\n    render() {\n        if (this.state.currentuser) {\n            return (\n                <div className=\"container\">\n                    <header className=\"jumbotron\">\n                        <h3>{this.state.content}</h3>\n                    </header>\n                </div>\n            )\n        } else {\n            return (\n                <Route>\n                    <Redirect\n                        to={{\n                        pathname: \"/login\"\n                        }}\n                    />\n                </Route>\n            )\n            \n        }\n        \n    }\n}\n","/Users/trainguyen/GTBootCamp/mern-boilerplate/client/src/components/pages/board.moderator.js",["76","77"],"import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route, Redirect} from \"react-router-dom\";\nimport authService from '../../services/auth.service';\n\nimport UserService from \"../../services/user.service\";\nimport AuthService from \"../../services/auth.service\";\n\nexport default class BoardMod extends Component {\n    state = {\n        currentuser: authService.getCurrentUser(),\n        content: \"\"\n    }\n    componentDidMount() {\n        UserService.getModeratorBoard().then(res => {\n            this.setState({content: res.data})\n        }, err => {\n            this.setState({\n                content: (err.response && err.response.data) || err.message || err.toString()\n            })\n        })\n    }\n    render() {\n        if (this.state.currentuser) {\n            return (\n                <div className=\"container\">\n                    <header className=\"jumbotron\">\n                        <h3>{this.state.content}</h3>\n                    </header>\n                </div>\n            )\n        } else {\n            return (\n                <Route>\n                    <Redirect\n                        to={{\n                        pathname: \"/login\"\n                        }}\n                    />\n                </Route>\n            )\n            \n        }\n        \n    }\n}\n","/Users/trainguyen/GTBootCamp/mern-boilerplate/client/src/services/user.service.js",[],"/Users/trainguyen/GTBootCamp/mern-boilerplate/client/src/services/auth.header.js",[],"/Users/trainguyen/GTBootCamp/mern-boilerplate/client/src/components/navbar/navbar.component.js",["78","79","80"],"import React from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport NavItem from \"./navitem.component\";\n\nexport default function Navbar(props) {\n    return (\n        <div>\n                <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n                <Link to={\"/\"} className=\"navbar-brand\">\n                    MERN STACK BOILERPLATE\n                </Link>\n                <div className=\"navbar-nav mr-auto\">\n                    <NavItem link=\"Home\" label=\"Home\"/>\n\n                    {props.showModeratorBoard && (\n                        <NavItem link=\"Mod\" label=\"Moderator Board\"/>\n                    )}\n\n                    {props.showAdminBoard && (\n                    <li className=\"nav-item\">\n                        <NavItem link=\"Admin\" label=\"Admin Board\"/>\n                    </li>\n                    )}\n\n                    {props.currentUser && (\n                    <li className=\"nav-item\">\n                        <NavItem link=\"User\" label=\"User Board\"/>\n                    </li>\n                    )}\n                </div>\n\n                {props.currentUser ? (\n                    <div className=\"navbar-nav ml-auto\">\n                        <NavItem link=\"profile\" label={props.currentUser.username}/>\n                        \n                        <li className=\"nav-item\">\n                            <a href=\"/login\" className=\"nav-link\" onClick={props.logOut}>\n                                Logout\n                            </a>\n                        </li>\n                    </div>\n                ) : (\n                    <div className=\"navbar-nav ml-auto\">\n                        <NavItem link=\"login\" label=\"Sign In\"/>\n                        <NavItem link=\"register\" label=\"Sign Up\"/>\n                    </div>\n                )}\n                </nav>\n            \n        </div>\n    )\n}\n","/Users/trainguyen/GTBootCamp/mern-boilerplate/client/src/components/navbar/navitem.component.js",["81"],"import React from 'react';\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\n\nexport default function NavItem(props) {\n    return (\n        <div>\n            <li className=\"nav-item\">\n                <Link to={`/${props.link}`} className=\"nav-link\">\n                    {props.label}\n                </Link>\n            </li>\n        </div>\n        \n    )\n}\n",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":2,"column":42,"nodeType":"88","messageId":"89","endLine":2,"endColumn":46},{"ruleId":"86","severity":1,"message":"90","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":23},{"ruleId":"86","severity":1,"message":"91","line":4,"column":8,"nodeType":"88","messageId":"89","endLine":4,"endColumn":19},{"ruleId":"86","severity":1,"message":"92","line":3,"column":22,"nodeType":"88","messageId":"89","endLine":3,"endColumn":28},{"ruleId":"86","severity":1,"message":"92","line":2,"column":26,"nodeType":"88","messageId":"89","endLine":2,"endColumn":32},{"ruleId":"86","severity":1,"message":"91","line":6,"column":8,"nodeType":"88","messageId":"89","endLine":6,"endColumn":19},{"ruleId":"86","severity":1,"message":"92","line":2,"column":26,"nodeType":"88","messageId":"89","endLine":2,"endColumn":32},{"ruleId":"86","severity":1,"message":"91","line":6,"column":8,"nodeType":"88","messageId":"89","endLine":6,"endColumn":19},{"ruleId":"86","severity":1,"message":"92","line":2,"column":26,"nodeType":"88","messageId":"89","endLine":2,"endColumn":32},{"ruleId":"86","severity":1,"message":"91","line":6,"column":8,"nodeType":"88","messageId":"89","endLine":6,"endColumn":19},{"ruleId":"86","severity":1,"message":"92","line":2,"column":27,"nodeType":"88","messageId":"89","endLine":2,"endColumn":33},{"ruleId":"86","severity":1,"message":"93","line":2,"column":35,"nodeType":"88","messageId":"89","endLine":2,"endColumn":40},{"ruleId":"86","severity":1,"message":"94","line":2,"column":48,"nodeType":"88","messageId":"89","endLine":2,"endColumn":54},{"ruleId":"86","severity":1,"message":"92","line":2,"column":27,"nodeType":"88","messageId":"89","endLine":2,"endColumn":33},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'AuthService' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","no-global-assign","no-unsafe-negation"]